CREATE IF NOT EXISTS TABLE Users ( id NUMBER(6) NOT NULL PRIMARY KEY,
	login VARCHAR2(100) NOT NULL,
	pass VARCHAR2(32) NOT NULL);

CREATE IF NOT EXISTS TABLE Person (
	id NUMBER(6) NOT NULL PRIMARY KEY,
	name VARCHAR2(100) NOT NULL);

CREATE IF NOT EXISTS TABLE Game (
	id NUMBER(6) NOT NULL PRIMARY KEY,
	name VARCHAR2(100) NOT NULL,
	year NUMBER(4) NOT NULL,
	description VARCHAR2(2000) NOT NULL,
	bggscore NUMBER(4,2) NOT NULL,
	gametype VARCHAR2(30) NOT NULL,
	designerid NUMBER(6) NOT NULL REFERENCES Person);

CREATE IF NOT EXISTS TABLE Rating (
	value NUMBER(2) NOT NULL,
	userid NUMBER(6) NOT NULL REFERENCES Users,
	gameid NUMBER(6) NOT NULL REFERENCES Game,
	PRIMARY KEY (value, userid));	

CREATE IF NOT EXISTS TABLE Publisher (
	id NUMBER(6) NOT NULL PRIMARY KEY,
	name VARCHAR2(100) NOT NULL);

CREATE IF NOT EXISTS TABLE GamePublisher (
	gameid NUMBER(6) NOT NULL REFERENCES Game,
	publisherid NUMBER(6) NOT NULL REFERENCES Publisher,
	PRIMARY KEY (gameid, publisherid));

CREATE IF NOT EXISTS TABLE GameArtist (
	gameid NUMBER(6) NOT NULL REFERENCES Game,
	artistid NUMBER(6) NOT NULL REFERENCES Person,
	PRIMARY KEY (gameid, artistid));

CREATE IF NOT EXISTS TABLE Category (
	id NUMBER(6) NOT NULL PRIMARY KEY,
	name VARCHAR2(100) NOT NULL);

CREATE IF NOT EXISTS TABLE Mechanism (
	id NUMBER(6) NOT NULL PRIMARY KEY,
	name VARCHAR2(100) NOT NULL);

CREATE IF NOT EXISTS TABLE Family (
	id NUMBER(6) NOT NULL PRIMARY KEY,
	name VARCHAR2(100) NOT NULL);

CREATE IF NOT EXISTS TABLE GameCategory (
	gameid NUMBER(6) NOT NULL REFERENCES Game,
	categoryid NUMBER(6) NOT NULL REFERENCES Category,
	PRIMARY KEY (gameid, categoryid));

CREATE IF NOT EXISTS TABLE GameMechanism (
	gameid NUMBER(6) NOT NULL REFERENCES Game,
	mechanismid  NUMBER(6) NOT NULL REFERENCES Category,
	PRIMARY KEY (gameid, mechanismid));

CREATE IF NOT EXISTS TABLE GameFamily (
	gameid NUMBER(6) NOT NULL REFERENCES Game,
	familyid NUMBER(6) NOT NULL REFERENCES Category,
	PRIMARY KEY (gameid, familyid));

CREATE IF NOT EXISTS SEQUENCE UsersSeq START WITH 1 INCREMENT BY 1;
CREATE TRIGGER users_in_trigger
BEFORE INSERT ON Users
FOR EACH ROW
BEGIN
	SELECT UsersSeq.nextval INTO :NEW.id FROM dual;
END;	

CREATE SEQUENCE GameSeq START WITH 1 INCREMENT BY 1;
CREATE TRIGGER game_in_trigger
BEFORE INSERT ON Game
FOR EACH ROW
BEGIN
	SELECT GameSeq.nextval INTO :NEW.id FROM dual;
END;

CREATE SEQUENCE PersonSeq START WITH 1 INCREMENT BY 1;
CREATE TRIGGER person_in_trigger
BEFORE INSERT ON Person
FOR EACH ROW
BEGIN
	SELECT PersonSeq.nextval INTO :NEW.id FROM dual;
END;

CREATE SEQUENCE PublisherSeq START WITH 1 INCREMENT BY 1;
CREATE TRIGGER publisher_in_trigger
BEFORE INSERT ON Publisher
FOR EACH ROW
BEGIN
	SELECT PublisherSeq.nextval INTO :NEW.id FROM dual;
END;

CREATE SEQUENCE CategorySeq START WITH 1 INCREMENT BY 1;
CREATE TRIGGER category_in_trigger
BEFORE INSERT ON Category
FOR EACH ROW
BEGIN
	SELECT CategorySeq.nextval INTO :NEW.id FROM dual;
END;

CREATE SEQUENCE MechanismSeq START WITH 1 INCREMENT BY 1;
CREATE TRIGGER mechanism_in_trigger
BEFORE INSERT ON Mechanism
FOR EACH ROW
BEGIN
	SELECT MechanismSeq.nextval INTO :NEW.id FROM dual;
END;

CREATE SEQUENCE FamilySeq START WITH 1 INCREMENT BY 1;
CREATE TRIGGER family_in_trigger
BEFORE INSERT ON Family
FOR EACH ROW
BEGIN
	SELECT FamilySeq.nextval INTO :NEW.id FROM dual;
END;
